<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/jee
    http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- 路径要加上classpath: -->
	<context:property-placeholder
		location="classpath:jdbc.properties,classpath:log4j.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass" value="${jdbc.driverClassName}"/> 
		<property name="jdbcUrl" value="${jdbc.url}"/> <property name="user" value="${jdbc.username}"/> 
		<property name="password" value="${jdbc.password}"/> </bean> -->

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- The application server manages global transactions through the JTA 
		and handle transactions across multiple resources, need to use JNDI in an 
		application server environment. a JDBC connection cannot run within a global 
		JTA transaction -->
	<!-- <jee:jndi-lookup id="dataSource3" jndi-name="jdbc/jpetstore"/> -->
	<!-- The JtaTransactionManager does not need to know about the DataSource, 
		it uses the container’s global transaction management infrastructure -->
	<!-- <bean id="txManager2" class="org.springframework.transaction.jta.JtaTransactionManager"/> -->
</beans>